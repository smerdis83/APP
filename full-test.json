{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-4a7b-8c9d-swagger-test",
		"name": "Full API Test Suite (Based on Swagger)",
		"description": "A comprehensive, sequential test collection generated from the OpenAPI specification for the Online Food Ordering system. Covers all user roles and major API functionalities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. User Onboarding & Authentication",
			"item": [
				{
					"name": "1.1 Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.test(\"Admin token received\", () => { pm.expect(res.token).to.be.a('string'); });",
									"pm.collectionVariables.set(\"admin_token\", res.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"seller_id\", res.user_id);",
									"pm.collectionVariables.set(\"seller_token\", res.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"John Doe Seller\",\n    \"phone\": \"09120000001\",\n    \"password\": \"SecurePass123!\",\n    \"role\": \"seller\",\n    \"address\": \"123 Seller St\",\n    \"bank_info\": {\n        \"bank_name\": \"Test Bank\",\n        \"account_number\": \"1234567890\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3 Admin Approves Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users/{{seller_id}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users",
								"{{seller_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 Register Buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"buyer_id\", res.user_id);",
									"pm.collectionVariables.set(\"buyer_token\", res.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Sara Buyer\",\n    \"phone\": \"09120000002\",\n    \"password\": \"StrongPass456!\",\n    \"role\": \"buyer\",\n    \"address\": \"45 Buyer Ave\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.5 Register Courier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"courier_id\", res.user_id);",
									"pm.collectionVariables.set(\"courier_token\", res.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Ali Courier\",\n    \"phone\": \"09120000003\",\n    \"password\": \"CourierPass789!\",\n    \"role\": \"courier\",\n    \"address\": \"22 Courier Blvd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.6 Admin Approves Courier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users/{{courier_id}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users",
								"{{courier_id}}",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Seller: Restaurant & Menu Management",
			"item": [
				{
					"name": "2.1 Seller Creates Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", () => { pm.response.to.have.status(201); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", res.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tehran Burger\",\n    \"address\": \"123 Food St, Tehran\",\n    \"phone\": \"02112345678\",\n    \"tax_fee\": 9,\n    \"additional_fee\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 Seller Adds Food Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"food_item_id\", res.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Classic Burger\",\n    \"description\": \"A classic beef burger.\",\n    \"price\": 15000,\n    \"supply\": 50,\n    \"keywords\": [\"burger\", \"classic\"],\n    \"vendor_id\": \"{{seller_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 Seller Creates Menu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"menu_title\", res.title);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Main Courses\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/menu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"menu"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4 Seller Adds Item to Menu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": {{food_item_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/menu/{{menu_title}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"menu",
								"{{menu_title}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Buyer: Discovery & Ordering",
			"item": [
				{
					"name": "3.1 Buyer Searches for Vendors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.test(\"Found the created restaurant\", () => {",
									"    const found = res.some(r => r.id === pm.collectionVariables.get('restaurant_id'));",
									"    pm.expect(found).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search\": \"Burger\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 Buyer Places an Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"order_id\", res.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delivery_address\": \"Tehran, Valiasr Street, No. 72\",\n    \"vendor_id\": {{restaurant_id}},\n    \"items\": [\n        {\n            \"item_id\": {{food_item_id}},\n            \"quantity\": 2\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Order Fulfillment",
			"item": [
				{
					"name": "4.1 Seller Accepts Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{seller_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/orders/{{order_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.2 Courier Views Available Deliveries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deliveries/available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deliveries",
								"available"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.3 Courier Accepts Delivery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deliveries/{{order_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deliveries",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.4 Courier Delivers Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{courier_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"delivered\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deliveries/{{order_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deliveries",
								"{{order_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Post-Order & Admin",
			"item": [
				{
					"name": "5.1 Buyer Submits Rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": {{order_id}},\n    \"rating\": 5,\n    \"comment\": \"Excellent burger!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ratings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 Admin Creates Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", () => { pm.response.to.have.status(201); });",
									"const res = pm.response.json();",
									"pm.collectionVariables.set(\"coupon_id\", res.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"coupon_code\": \"SUMMER25\",\n    \"type\": \"percent\",\n    \"value\": 25,\n    \"min_price\": 20000,\n    \"user_count\": 100,\n    \"start_date\": \"2025-06-01\",\n    \"end_date\": \"2025-09-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/coupons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"coupons"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.3 Admin Views All Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Failure & Edge Case Scenarios",
			"item": [
				{
					"name": "FAIL - Register with existing phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409 Conflict\", () => { pm.response.to.have.status(409); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Another Seller\",\n    \"phone\": \"09120000001\",\n    \"password\": \"password456\",\n    \"role\": \"seller\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "FAIL - Buyer tries to create a restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", () => { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Buyer's Illegal Restaurant\",\n    \"address\": \"Secret Address\",\n    \"phone\": \"02100000000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "FAIL - Order with insufficient supply",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", () => { pm.response.to.have.status(400); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delivery_address\": \"Some Address\",\n    \"vendor_id\": {{restaurant_id}},\n    \"items\": [\n        {\n            \"item_id\": {{food_item_id}},\n            \"quantity\": 999\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}

